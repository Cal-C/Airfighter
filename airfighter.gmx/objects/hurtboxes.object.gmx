<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x,y,hitboxes)){
    hitbox = instance_place(x,y,hitboxes) //making a var for the hitbox that just colided with the player
    if( player != hitbox.player ){
        if(player.state != 4){
            if(player.character == 1){
                player.sprite_index = Death_hitstunwithscythe;
                player.state = 4;
                player.image_speed = 1/7;
            }
        global.healthnum = global.healthnum-hitbox.player.currentdmg*hitbox.player.healthmulti;
        if(global.healthnum &gt; 100 or global.healthnum &lt; 0){
            if(global.deathsdoor){ 
                with player{
                    instance_destroy();
                }
             }
             
            if(!global.deathsdoor){ global.deathsdoor = true; }
        }
        if(0 &lt; global.healthnum &lt; 100){
            global.healthnum = false;
        }
        
        global.healthnum = min(global.healthnum,100);
        global.healthnum = max(global.healthnum,0);
        
        hitbox.player.currentdmg = hitbox.player.currentdmg - 5;
        hitbox.player.currentdmg = max(hitbox.player.currentdmg,1);
        hitbox.player.xspd = hitbox.player.xspd/2;
        hitbox.player.yspd = hitbox.player.yspd/2;
        //knockback
        totalknb = hitbox.player.currentdmg*hitbox.player.currentdmg;
        player.xspd = totalknb * ((player.x-hitbox.x)/(abs(player.x-hitbox.player.x)+abs(player.y-hitbox.player.y)));
        player.yspd = totalknb * ((player.y-hitbox.y)/(abs(player.x-hitbox.player.x)+abs(player.y-hitbox.player.y)));
        player.xaccel = 0;
        player.yaccel = 0;        
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
